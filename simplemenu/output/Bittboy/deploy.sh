#!/bin/busybox sh
set -e
echo "Welcome to Taichi's simplemenu deploy script! Initiating..."

# Preparation for MacOS users: Find and remove dot files generated by MacOS. 
if find /mnt/ -name '._*' -print -quit | grep '._' >/dev/null; then
    echo "Deleting all macos dot files"
    find /mnt/ -name '._*' -exec rm -v {} \;
    echo "Step 1 completed"
fi

# Create the ".simplemenu" folder
if [ ! -d "/mnt/.simplemenu" ]; then
    echo "Creating .simplemenu on /mnt/"
    mkdir /mnt/.simplemenu
    echo "Step 2 completed"
fi

# Copy the contents of "simplemenu" to ".simplemenu"
if [ -d "/mnt/apps/simplemenu" ]; then
    # Copy main.sh to a variable for later use
    if [ -f "/mnt/apps/simplemenu/main.sh" ]; then
        echo "Saving main.sh contents from /mnt/apps/simplemenu/"
        cat_main_content=$(cat /mnt/apps/simplemenu/main.sh)
    fi
    echo "Copying simplemenu config data to /mnt/.simplemenu/"
    cp -r /mnt/apps/simplemenu/config/* /mnt/.simplemenu/
    cp -r /mnt/apps/simplemenu/* /mnt/.simplemenu/
    echo "Removing redundant data from /mnt/.simplemenu/"
    rm -fr /mnt/.simplemenu/config/*
    rm -fr /mnt/.simplemenu/deploy.sh /mnt/.simplemenu/main.sh /mnt/.simplemenu/clean_dot_files.sh
    echo "Step 3 completed"
fi

# Copy "autoexec.sh" one folder upwards
if [ -f "/mnt/.simplemenu/scripts/autoexec.sh" ]; then
    echo "Copying autoexec.sh to /mnt/"
    cp /mnt/.simplemenu/scripts/autoexec.sh /mnt/
    echo "Step 4 completed"
fi

# Autobooting simplemenu
if [ -f "/etc/main" ]; then
    echo "Changing partition permissions on /"
    # Ensure the script is executed with root permissions
    if [ "$(id -u)" != "0" ]; then
        echo "This script must be run as root" 1>&2
        exit 1
    fi
    # Attempt to remount the filesystem as read-write
    mount -o remount,rw /
    if [ $? -eq 0 ]; then
        if [ -n "$cat_main_content" ]; then
            echo "$cat_main_content" > /etc/main
            echo "cat_main_content copied to /etc/main"
        fi
        echo "Changing partition permissions back on /"
        mount -o remount,ro /
        echo "Step 5 completed"
    else
        echo "Failed to remount filesystem as read-write"
    fi
fi

echo "Syncing..."
sync
echo "Shutting down..."
sleep 3
poweroff
exit